// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  name       String @db.VarChar(100)
  email      String @unique
  password   Password?
  phone      String?  @unique @db.VarChar(32)
  address    String?  @db.VarChar(255)
  
  carts      Cart[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("users")
}

model Password {
  id String @id @default(cuid())

  hash String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("passwords")

}

model Product {
  id String @id @default(cuid()) // abc123xyz456

  name        String @unique // Ace Necklace
  slug        String @unique // ace-necklace
  price       Int // 115000
  imageURL    String // https://example.com/ace-necklace-1686803573.jpg
  category    String
  description String // Favourite Necklace of Portgas D. Ace
  sku         String @unique // H11XXX003305
  stock       Int

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model CartItem {
  id String @id @default(cuid())

  product   Product @relation(fields: [productId], references: [id])
  productId String

  quantity Int @default(1)

  cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart_items")
}

model Cart {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carts")
}